
/*
 * Copyright 1999-2020 Alibaba Group Holding Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3"; // 定义proto的版本

// 导入其他的.proto文件
import "google/protobuf/any.proto";
import "google/protobuf/timestamp.proto";

option java_multiple_files = true;
option java_package = "com.alibaba.nacos.api.grpc.auto"; // option可选的；指java类生成所在的包

message Metadata { // 定义Metadata消息格式，生成对应Metadata类，包含了字符串类型type和clientIp、map类型的headers
  string type = 3;
  string clientIp = 8;
  map<string, string> headers = 7;
}


message Payload { 定义Payload消息格式，生成对应Payload类，包含了Metadata的引用、Any类型（对应java中Object）body
  Metadata metadata = 2;
  google.protobuf.Any body = 3;
}

service RequestStream { // 定义service RequestStream会生产客户端和服务端存根用于grpc通信，暴露的服务为requestStream，类型为：服务端到客户端流式RPC，接受Payload对象参数，返回批量Payload数据
  // build a streamRequest
  rpc requestStream (Payload) returns (stream Payload) {
  }
}

service Request { // 定义service Request会生产客户端和服务端存根用于grpc通信，暴露的服务为request，类型为：简单RPC调用，接受Payload参数返回Payload类型对象
  // Sends a commonRequest
  rpc request (Payload) returns (Payload) {
  }
}

service BiRequestStream { // 定义service BiRequestStream会生产客户端和服务端存根用于grpc通信，暴露的服务为requestBiStream，类型为：双向流式RPC，接受批量Payload类型数据，返回批量Payload类型数据
  // Sends a commonRequest
  rpc requestBiStream (stream Payload) returns (stream Payload) {
  }
}


// 我们从.proto的描述中能够发现，nacos server将暴露三个服务。
// 1 RequestStream#requestStream用于服务端到客户端流式RPC；
// 2 Request#request用于简单RPC调用；
// 3 BiRequestStream#requestBiStream用于双向流式RPC调用。三种的出入参均为Payload。