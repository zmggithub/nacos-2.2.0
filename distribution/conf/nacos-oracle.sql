/*
 * Copyright 1999-2018 Alibaba Group Holding Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

 /*
 Navicat Premium Data Transfer

 Source Server         : 192.168.153.192
 Source Server Type    : Oracle
 Source Server Version : 110200 (Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options)
 Source Host           : 192.168.153.192:1521
 Source Schema         : IBMP

 Target Server Type    : Oracle
 Target Server Version : 110200 (Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options)
 File Encoding         : 65001

 Date: 08/02/2023 20:54:17
*/


-- ----------------------------
-- Table structure for CONFIG_INFO
-- ----------------------------
DROP TABLE CONFIG_INFO;
CREATE TABLE CONFIG_INFO (
  ID NUMBER(20,0) NOT NULL,
  DATA_ID VARCHAR2(255 BYTE) NOT NULL,
  GROUP_ID VARCHAR2(255 BYTE) DEFAULT '',
  CONTENT CLOB NOT NULL,
  MD5 VARCHAR2(32 BYTE),
  GMT_CREATE TIMESTAMP(6) DEFAULT SYSDATE NOT NULL,
  GMT_MODIFIED TIMESTAMP(6) DEFAULT SYSDATE NOT NULL,
  SRC_USER CLOB,
  SRC_IP VARCHAR2(50 BYTE) DEFAULT '',
  APP_NAME VARCHAR2(128 BYTE) DEFAULT '',
  TENANT_ID VARCHAR2(128 BYTE) DEFAULT '',
  C_DESC VARCHAR2(256 BYTE) DEFAULT '',
  C_USE VARCHAR2(64 BYTE) DEFAULT '',
  EFFECT VARCHAR2(64 BYTE) DEFAULT '',
  TYPE VARCHAR2(64 BYTE) DEFAULT '',
  C_SCHEMA CLOB,
  ENCRYPTED_DATA_KEY CLOB DEFAULT ''
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Records of CONFIG_INFO
-- ----------------------------
INSERT INTO CONFIG_INFO VALUES ('1', 'test', 'DEFAULT_GROUP', '2', 'c81e728d9d4c2f636f067f89cc14862c', TO_TIMESTAMP('2023-02-08 20:06:24.974000', 'SYYYY-MM-DD HH24:MI:SS:FF6'), TO_TIMESTAMP('2023-02-08 20:06:24.974000', 'SYYYY-MM-DD HH24:MI:SS:FF6'), NULL, '0:0:0:0:0:0:0:1', NULL, NULL, '2', NULL, NULL, 'text', NULL, NULL);

-- ----------------------------
-- Table structure for CONFIG_INFO_AGGR
-- ----------------------------
DROP TABLE CONFIG_INFO_AGGR;
CREATE TABLE CONFIG_INFO_AGGR (
  ID NUMBER(20,0) NOT NULL,
  DATA_ID VARCHAR2(255 BYTE) NOT NULL,
  GROUP_ID VARCHAR2(255 BYTE) NOT NULL,
  DATUM_ID VARCHAR2(255 BYTE) NOT NULL,
  CONTENT CLOB NOT NULL,
  GMT_MODIFIED TIMESTAMP(6) DEFAULT SYSDATE NOT NULL,
  APP_NAME VARCHAR2(128 BYTE) DEFAULT '',
  TENANT_ID VARCHAR2(128 BYTE) DEFAULT ''
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Records of CONFIG_INFO_AGGR
-- ----------------------------

-- ----------------------------
-- Table structure for CONFIG_INFO_BETA
-- ----------------------------
DROP TABLE CONFIG_INFO_BETA;
CREATE TABLE CONFIG_INFO_BETA (
  ID NUMBER(20,0) NOT NULL,
  DATA_ID VARCHAR2(255 BYTE) NOT NULL,
  GROUP_ID VARCHAR2(128 BYTE) NOT NULL,
  APP_NAME VARCHAR2(128 BYTE) DEFAULT '',
  CONTENT CLOB NOT NULL,
  BETA_IPS VARCHAR2(1024 BYTE) DEFAULT '',
  MD5 VARCHAR2(32 BYTE) DEFAULT '',
  GMT_CREATE TIMESTAMP(6) DEFAULT SYSDATE NOT NULL,
  GMT_MODIFIED TIMESTAMP(6) DEFAULT SYSDATE NOT NULL,
  SRC_USER CLOB,
  SRC_IP VARCHAR2(50 BYTE),
  TENANT_ID VARCHAR2(128 BYTE) DEFAULT '',
  ENCRYPTED_DATA_KEY CLOB DEFAULT ''
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Records of CONFIG_INFO_BETA
-- ----------------------------

-- ----------------------------
-- Table structure for CONFIG_INFO_TAG
-- ----------------------------
DROP TABLE CONFIG_INFO_TAG;
CREATE TABLE CONFIG_INFO_TAG (
  ID NUMBER(20,0) NOT NULL,
  DATA_ID VARCHAR2(255 BYTE) NOT NULL,
  GROUP_ID VARCHAR2(128 BYTE) NOT NULL,
  TENANT_ID VARCHAR2(128 BYTE) DEFAULT '',
  TAG_ID VARCHAR2(128 BYTE) NOT NULL,
  APP_NAME VARCHAR2(128 BYTE) DEFAULT '',
  CONTENT CLOB NOT NULL,
  MD5 VARCHAR2(32 BYTE) DEFAULT '',
  GMT_CREATE TIMESTAMP(6) DEFAULT SYSDATE NOT NULL,
  GMT_MODIFIED TIMESTAMP(6) DEFAULT SYSDATE NOT NULL,
  SRC_USER CLOB,
  SRC_IP VARCHAR2(50 BYTE)
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Records of CONFIG_INFO_TAG
-- ----------------------------

-- ----------------------------
-- Table structure for CONFIG_TAGS_RELATION
-- ----------------------------
DROP TABLE CONFIG_TAGS_RELATION;
CREATE TABLE CONFIG_TAGS_RELATION (
  ID NUMBER(20,0) NOT NULL,
  TAG_NAME VARCHAR2(128 BYTE) NOT NULL,
  TAG_TYPE VARCHAR2(64 BYTE) DEFAULT '',
  DATA_ID VARCHAR2(255 BYTE) NOT NULL,
  GROUP_ID VARCHAR2(128 BYTE) NOT NULL,
  TENANT_ID VARCHAR2(128 BYTE) DEFAULT '',
  NID NUMBER(20,0) NOT NULL
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Records of CONFIG_TAGS_RELATION
-- ----------------------------

-- ----------------------------
-- Table structure for GROUP_CAPACITY
-- ----------------------------
DROP TABLE GROUP_CAPACITY;
CREATE TABLE GROUP_CAPACITY (
  ID NUMBER(20,0) NOT NULL,
  GROUP_ID VARCHAR2(128 BYTE) DEFAULT '' NOT NULL,
  QUOTA NUMBER(10,0) DEFAULT 0 NOT NULL,
  USAGE NUMBER(10,0) DEFAULT 0 NOT NULL,
  MAX_SIZE NUMBER(10,0) DEFAULT 0 NOT NULL,
  MAX_AGGR_COUNT NUMBER(10,0) DEFAULT 0 NOT NULL,
  MAX_AGGR_SIZE NUMBER(10,0) DEFAULT 0 NOT NULL,
  MAX_HISTORY_COUNT NUMBER(10,0) DEFAULT 0 NOT NULL,
  GMT_CREATE TIMESTAMP(6) DEFAULT SYSDATE NOT NULL,
  GMT_MODIFIED TIMESTAMP(6) DEFAULT SYSDATE NOT NULL
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Records of GROUP_CAPACITY
-- ----------------------------

-- ----------------------------
-- Table structure for HIS_CONFIG_INFO
-- ----------------------------
DROP TABLE HIS_CONFIG_INFO;
CREATE TABLE HIS_CONFIG_INFO (
  ID NUMBER(20,0) NOT NULL,
  NID NUMBER(20,0) NOT NULL,
  DATA_ID VARCHAR2(255 BYTE) NOT NULL,
  GROUP_ID VARCHAR2(128 BYTE) NOT NULL,
  APP_NAME VARCHAR2(128 BYTE) DEFAULT '',
  CONTENT CLOB NOT NULL,
  MD5 VARCHAR2(32 BYTE) DEFAULT '',
  GMT_CREATE TIMESTAMP(6) DEFAULT SYSDATE NOT NULL,
  GMT_MODIFIED TIMESTAMP(6) DEFAULT SYSDATE NOT NULL,
  SRC_USER CLOB,
  SRC_IP VARCHAR2(50 BYTE) DEFAULT '',
  OP_TYPE CHAR(10 BYTE) DEFAULT '',
  TENANT_ID VARCHAR2(128 BYTE) DEFAULT '',
  ENCRYPTED_DATA_KEY CLOB DEFAULT ''
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Records of HIS_CONFIG_INFO
-- ----------------------------
INSERT INTO HIS_CONFIG_INFO VALUES ('0', '1', 'test', 'DEFAULT_GROUP', NULL, '2', 'c81e728d9d4c2f636f067f89cc14862c', TO_TIMESTAMP('2023-02-08 08:31:10.000000', 'SYYYY-MM-DD HH24:MI:SS:FF6'), TO_TIMESTAMP('2023-02-08 20:06:24.974000', 'SYYYY-MM-DD HH24:MI:SS:FF6'), NULL, '0:0:0:0:0:0:0:1', 'I         ', NULL, NULL);

-- ----------------------------
-- Table structure for PERMISSIONS
-- ----------------------------
DROP TABLE PERMISSIONS;
CREATE TABLE PERMISSIONS (
  ROLE VARCHAR2(50 BYTE) NOT NULL,
  RESOURCE VARCHAR2(512 BYTE) NOT NULL,
  ACTION VARCHAR2(8 BYTE) NOT NULL
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Records of PERMISSIONS
-- ----------------------------

-- ----------------------------
-- Table structure for ROLES
-- ----------------------------
DROP TABLE ROLES;
CREATE TABLE ROLES (
  USERNAME VARCHAR2(50 BYTE) NOT NULL,
  ROLE VARCHAR2(50 BYTE) NOT NULL
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Records of ROLES
-- ----------------------------
INSERT INTO ROLES VALUES ('nacos', 'ROLE_ADMIN');

-- ----------------------------
-- Table structure for TENANT_CAPACITY
-- ----------------------------
DROP TABLE TENANT_CAPACITY;
CREATE TABLE TENANT_CAPACITY (
  ID NUMBER(20,0) NOT NULL,
  TENANT_ID VARCHAR2(128 BYTE) DEFAULT '' NOT NULL,
  QUOTA NUMBER(10,0) DEFAULT 0 NOT NULL,
  USAGE NUMBER(10,0) DEFAULT 0 NOT NULL,
  MAX_SIZE NUMBER(10,0) DEFAULT 0 NOT NULL,
  MAX_AGGR_COUNT NUMBER(10,0) DEFAULT 0 NOT NULL,
  MAX_AGGR_SIZE NUMBER(10,0) DEFAULT 0 NOT NULL,
  MAX_HISTORY_COUNT NUMBER(10,0) DEFAULT 0 NOT NULL,
  GMT_CREATE TIMESTAMP(6) DEFAULT SYSDATE NOT NULL,
  GMT_MODIFIED TIMESTAMP(6) DEFAULT SYSDATE NOT NULL
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Records of TENANT_CAPACITY
-- ----------------------------

-- ----------------------------
-- Table structure for TENANT_INFO
-- ----------------------------
DROP TABLE TENANT_INFO;
CREATE TABLE TENANT_INFO (
  ID NUMBER(20,0) NOT NULL,
  KP VARCHAR2(128 BYTE) NOT NULL,
  TENANT_ID VARCHAR2(128 BYTE) DEFAULT '',
  TENANT_NAME VARCHAR2(128 BYTE) DEFAULT '',
  TENANT_DESC VARCHAR2(256 BYTE) DEFAULT '',
  CREATE_SOURCE VARCHAR2(32 BYTE) DEFAULT '',
  GMT_CREATE NUMBER(20,0) NOT NULL,
  GMT_MODIFIED NUMBER(20,0) NOT NULL
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Records of TENANT_INFO
-- ----------------------------

-- ----------------------------
-- Table structure for USERS
-- ----------------------------
DROP TABLE USERS;
CREATE TABLE USERS (
  USERNAME VARCHAR2(50 BYTE) NOT NULL,
  PASSWORD VARCHAR2(500 BYTE) NOT NULL,
  ENABLED NUMBER(1,0) DEFAULT 1 NOT NULL
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Records of USERS
-- ----------------------------
INSERT INTO USERS VALUES ('nacos', '$2a$10$EuWPZHzz32dJN7jexM34MOeYirDdFAZm2kuWj7VEOJhhZkDrxfvUu', '1');

-- ----------------------------
-- Sequence structure for SEQ_CONFIG_INFO
-- ----------------------------
DROP SEQUENCE SEQ_CONFIG_INFO;
CREATE SEQUENCE SEQ_CONFIG_INFO MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for SEQ_CONFIG_INFO_AGGR
-- ----------------------------
DROP SEQUENCE SEQ_CONFIG_INFO_AGGR;
CREATE SEQUENCE SEQ_CONFIG_INFO_AGGR MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for SEQ_CONFIG_INFO_BETA
-- ----------------------------
DROP SEQUENCE SEQ_CONFIG_INFO_BETA;
CREATE SEQUENCE SEQ_CONFIG_INFO_BETA MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for SEQ_CONFIG_INFO_TAG
-- ----------------------------
DROP SEQUENCE SEQ_CONFIG_INFO_TAG;
CREATE SEQUENCE SEQ_CONFIG_INFO_TAG MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for SEQ_CONFIG_TAGS_RELATION
-- ----------------------------
DROP SEQUENCE SEQ_CONFIG_TAGS_RELATION;
CREATE SEQUENCE SEQ_CONFIG_TAGS_RELATION MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for SEQ_GROUP_CAPACITY
-- ----------------------------
DROP SEQUENCE SEQ_GROUP_CAPACITY;
CREATE SEQUENCE SEQ_GROUP_CAPACITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for SEQ_HIS_CONFIG_INFO
-- ----------------------------
DROP SEQUENCE SEQ_HIS_CONFIG_INFO;
CREATE SEQUENCE SEQ_HIS_CONFIG_INFO MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for SEQ_TENANT_CAPACITY
-- ----------------------------
DROP SEQUENCE SEQ_TENANT_CAPACITY;
CREATE SEQUENCE SEQ_TENANT_CAPACITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for SEQ_TENANT_INFO
-- ----------------------------
DROP SEQUENCE SEQ_TENANT_INFO;
CREATE SEQUENCE SEQ_TENANT_INFO MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Primary Key structure for table CONFIG_INFO
-- ----------------------------
ALTER TABLE CONFIG_INFO ADD CONSTRAINT CI_PK_ID PRIMARY KEY (ID);

-- ----------------------------
-- Uniques structure for table CONFIG_INFO
-- ----------------------------
ALTER TABLE CONFIG_INFO ADD CONSTRAINT UK_CONFIGINFO_DATAGROUPTENANT UNIQUE (DATA_ID, GROUP_ID, TENANT_ID) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Checks structure for table CONFIG_INFO
-- ----------------------------
ALTER TABLE CONFIG_INFO ADD CONSTRAINT SYS_C0012757 CHECK (ID IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE CONFIG_INFO ADD CONSTRAINT SYS_C0012758 CHECK (DATA_ID IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE CONFIG_INFO ADD CONSTRAINT SYS_C0012759 CHECK (CONTENT IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE CONFIG_INFO ADD CONSTRAINT SYS_C0012760 CHECK (GMT_CREATE IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE CONFIG_INFO ADD CONSTRAINT SYS_C0012761 CHECK (GMT_MODIFIED IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Triggers structure for table CONFIG_INFO
-- ----------------------------
CREATE TRIGGER TG_CONFIG_INFO BEFORE INSERT ON CONFIG_INFO REFERENCING OLD AS OLD NEW AS NEW FOR EACH ROW 
begin
    select seq_config_info.nextval into :new.id from dual;
end;
/

-- ----------------------------
-- Primary Key structure for table CONFIG_INFO_AGGR
-- ----------------------------
ALTER TABLE CONFIG_INFO_AGGR ADD CONSTRAINT CIA_PK_ID PRIMARY KEY (ID);

-- ----------------------------
-- Uniques structure for table CONFIG_INFO_AGGR
-- ----------------------------
ALTER TABLE CONFIG_INFO_AGGR ADD CONSTRAINT UK_CIA_DATAGROUPTENANTDATUM UNIQUE (DATA_ID, GROUP_ID, TENANT_ID, DATUM_ID) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Checks structure for table CONFIG_INFO_AGGR
-- ----------------------------
ALTER TABLE CONFIG_INFO_AGGR ADD CONSTRAINT SYS_C0012764 CHECK (ID IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE CONFIG_INFO_AGGR ADD CONSTRAINT SYS_C0012765 CHECK (DATA_ID IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE CONFIG_INFO_AGGR ADD CONSTRAINT SYS_C0012766 CHECK (GROUP_ID IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE CONFIG_INFO_AGGR ADD CONSTRAINT SYS_C0012767 CHECK (DATUM_ID IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE CONFIG_INFO_AGGR ADD CONSTRAINT SYS_C0012768 CHECK (CONTENT IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE CONFIG_INFO_AGGR ADD CONSTRAINT SYS_C0012769 CHECK (GMT_MODIFIED IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Triggers structure for table CONFIG_INFO_AGGR
-- ----------------------------
CREATE TRIGGER TG_CONFIG_INFO_AGGR BEFORE INSERT ON CONFIG_INFO_AGGR REFERENCING OLD AS OLD NEW AS NEW FOR EACH ROW 
begin
    select seq_config_info_aggr.nextval into :new.id from dual;
end;
/

-- ----------------------------
-- Primary Key structure for table CONFIG_INFO_BETA
-- ----------------------------
ALTER TABLE CONFIG_INFO_BETA ADD CONSTRAINT CIB_PK_ID PRIMARY KEY (ID);

-- ----------------------------
-- Uniques structure for table CONFIG_INFO_BETA
-- ----------------------------
ALTER TABLE CONFIG_INFO_BETA ADD CONSTRAINT UK_CIB_DATAGROUPTENANT UNIQUE (DATA_ID, GROUP_ID, TENANT_ID) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Checks structure for table CONFIG_INFO_BETA
-- ----------------------------
ALTER TABLE CONFIG_INFO_BETA ADD CONSTRAINT SYS_C0012772 CHECK (ID IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE CONFIG_INFO_BETA ADD CONSTRAINT SYS_C0012773 CHECK (DATA_ID IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE CONFIG_INFO_BETA ADD CONSTRAINT SYS_C0012774 CHECK (GROUP_ID IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE CONFIG_INFO_BETA ADD CONSTRAINT SYS_C0012775 CHECK (CONTENT IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE CONFIG_INFO_BETA ADD CONSTRAINT SYS_C0012776 CHECK (GMT_CREATE IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE CONFIG_INFO_BETA ADD CONSTRAINT SYS_C0012777 CHECK (GMT_MODIFIED IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Triggers structure for table CONFIG_INFO_BETA
-- ----------------------------
CREATE TRIGGER TG_CONFIG_INFO_BETA BEFORE INSERT ON CONFIG_INFO_BETA REFERENCING OLD AS OLD NEW AS NEW FOR EACH ROW 
begin
    select seq_config_info_beta.nextval into :new.id from dual;
end;
/

-- ----------------------------
-- Primary Key structure for table CONFIG_INFO_TAG
-- ----------------------------
ALTER TABLE CONFIG_INFO_TAG ADD CONSTRAINT CIT_PK_ID PRIMARY KEY (ID);

-- ----------------------------
-- Uniques structure for table CONFIG_INFO_TAG
-- ----------------------------
ALTER TABLE CONFIG_INFO_TAG ADD CONSTRAINT UK_CIT_DATAGROUPTENANTTAG UNIQUE (DATA_ID, GROUP_ID, TENANT_ID, TAG_ID) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Checks structure for table CONFIG_INFO_TAG
-- ----------------------------
ALTER TABLE CONFIG_INFO_TAG ADD CONSTRAINT SYS_C0012780 CHECK (ID IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE CONFIG_INFO_TAG ADD CONSTRAINT SYS_C0012781 CHECK (DATA_ID IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE CONFIG_INFO_TAG ADD CONSTRAINT SYS_C0012782 CHECK (GROUP_ID IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE CONFIG_INFO_TAG ADD CONSTRAINT SYS_C0012783 CHECK (TAG_ID IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE CONFIG_INFO_TAG ADD CONSTRAINT SYS_C0012784 CHECK (CONTENT IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE CONFIG_INFO_TAG ADD CONSTRAINT SYS_C0012785 CHECK (GMT_CREATE IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE CONFIG_INFO_TAG ADD CONSTRAINT SYS_C0012786 CHECK (GMT_MODIFIED IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Triggers structure for table CONFIG_INFO_TAG
-- ----------------------------
CREATE TRIGGER TG_CONFIG_INFO_TAG BEFORE INSERT ON CONFIG_INFO_TAG REFERENCING OLD AS OLD NEW AS NEW FOR EACH ROW 
begin
    select seq_config_info_tag.nextval into :new.id from dual;
end;
/

-- ----------------------------
-- Primary Key structure for table CONFIG_TAGS_RELATION
-- ----------------------------
ALTER TABLE CONFIG_TAGS_RELATION ADD CONSTRAINT CTR_PK_ID PRIMARY KEY (NID);

-- ----------------------------
-- Uniques structure for table CONFIG_TAGS_RELATION
-- ----------------------------
ALTER TABLE CONFIG_TAGS_RELATION ADD CONSTRAINT UK_CTR_CONFIGIDTAG UNIQUE (ID, TAG_NAME, TAG_TYPE) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Checks structure for table CONFIG_TAGS_RELATION
-- ----------------------------
ALTER TABLE CONFIG_TAGS_RELATION ADD CONSTRAINT SYS_C0012789 CHECK (ID IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE CONFIG_TAGS_RELATION ADD CONSTRAINT SYS_C0012790 CHECK (TAG_NAME IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE CONFIG_TAGS_RELATION ADD CONSTRAINT SYS_C0012791 CHECK (DATA_ID IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE CONFIG_TAGS_RELATION ADD CONSTRAINT SYS_C0012792 CHECK (GROUP_ID IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE CONFIG_TAGS_RELATION ADD CONSTRAINT SYS_C0012793 CHECK (NID IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Indexes structure for table CONFIG_TAGS_RELATION
-- ----------------------------
CREATE INDEX IDX_CTR_TENANT_ID
  ON CONFIG_TAGS_RELATION (TENANT_ID ASC)
  LOGGING
  VISIBLE
PCTFREE 10
INITRANS 2
STORAGE (
  BUFFER_POOL DEFAULT
);

-- ----------------------------
-- Triggers structure for table CONFIG_TAGS_RELATION
-- ----------------------------
CREATE TRIGGER TG_CONFIG_TAGS_RELATION BEFORE INSERT ON CONFIG_TAGS_RELATION REFERENCING OLD AS OLD NEW AS NEW FOR EACH ROW 
begin
    select seq_config_tags_relation.nextval into :new.nid from dual;
end;
/

-- ----------------------------
-- Primary Key structure for table GROUP_CAPACITY
-- ----------------------------
ALTER TABLE GROUP_CAPACITY ADD CONSTRAINT GC_PK_ID PRIMARY KEY (ID);

-- ----------------------------
-- Uniques structure for table GROUP_CAPACITY
-- ----------------------------
ALTER TABLE GROUP_CAPACITY ADD CONSTRAINT UK_GC_GROUP_ID UNIQUE (GROUP_ID) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Checks structure for table GROUP_CAPACITY
-- ----------------------------
ALTER TABLE GROUP_CAPACITY ADD CONSTRAINT SYS_C0012796 CHECK (ID IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE GROUP_CAPACITY ADD CONSTRAINT SYS_C0012797 CHECK (GROUP_ID IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE GROUP_CAPACITY ADD CONSTRAINT SYS_C0012798 CHECK (QUOTA IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE GROUP_CAPACITY ADD CONSTRAINT SYS_C0012799 CHECK (USAGE IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE GROUP_CAPACITY ADD CONSTRAINT SYS_C0012800 CHECK (MAX_SIZE IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE GROUP_CAPACITY ADD CONSTRAINT SYS_C0012801 CHECK (MAX_AGGR_COUNT IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE GROUP_CAPACITY ADD CONSTRAINT SYS_C0012802 CHECK (MAX_AGGR_SIZE IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE GROUP_CAPACITY ADD CONSTRAINT SYS_C0012803 CHECK (MAX_HISTORY_COUNT IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE GROUP_CAPACITY ADD CONSTRAINT SYS_C0012804 CHECK (GMT_CREATE IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE GROUP_CAPACITY ADD CONSTRAINT SYS_C0012805 CHECK (GMT_MODIFIED IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Triggers structure for table GROUP_CAPACITY
-- ----------------------------
CREATE TRIGGER TG_GROUP_CAPACITY BEFORE INSERT ON GROUP_CAPACITY REFERENCING OLD AS OLD NEW AS NEW FOR EACH ROW 
begin
    select seq_group_capacity.nextval into :new.id from dual;
end;
/

-- ----------------------------
-- Primary Key structure for table HIS_CONFIG_INFO
-- ----------------------------
ALTER TABLE HIS_CONFIG_INFO ADD CONSTRAINT HCI_PK_ID PRIMARY KEY (NID);

-- ----------------------------
-- Checks structure for table HIS_CONFIG_INFO
-- ----------------------------
ALTER TABLE HIS_CONFIG_INFO ADD CONSTRAINT SYS_C0012808 CHECK (ID IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE HIS_CONFIG_INFO ADD CONSTRAINT SYS_C0012809 CHECK (NID IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE HIS_CONFIG_INFO ADD CONSTRAINT SYS_C0012810 CHECK (DATA_ID IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE HIS_CONFIG_INFO ADD CONSTRAINT SYS_C0012811 CHECK (GROUP_ID IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE HIS_CONFIG_INFO ADD CONSTRAINT SYS_C0012812 CHECK (CONTENT IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE HIS_CONFIG_INFO ADD CONSTRAINT SYS_C0012813 CHECK (GMT_CREATE IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE HIS_CONFIG_INFO ADD CONSTRAINT SYS_C0012814 CHECK (GMT_MODIFIED IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Indexes structure for table HIS_CONFIG_INFO
-- ----------------------------
CREATE INDEX IDX_HCI_DID
  ON HIS_CONFIG_INFO (DATA_ID ASC)
  LOGGING
  VISIBLE
PCTFREE 10
INITRANS 2
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
);
CREATE INDEX IDX_HCI_GMT_CREATE
  ON HIS_CONFIG_INFO (GMT_CREATE ASC)
  LOGGING
  VISIBLE
PCTFREE 10
INITRANS 2
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
);
CREATE INDEX IDX_HCI_GMT_MODIFIED
  ON HIS_CONFIG_INFO (GMT_MODIFIED ASC)
  LOGGING
  VISIBLE
PCTFREE 10
INITRANS 2
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
);

-- ----------------------------
-- Triggers structure for table HIS_CONFIG_INFO
-- ----------------------------
CREATE TRIGGER TG_HIS_CONFIG_INFO BEFORE INSERT ON HIS_CONFIG_INFO REFERENCING OLD AS OLD NEW AS NEW FOR EACH ROW 
begin
    select seq_his_config_info.nextval into :new.nid from dual;
end;
/

-- ----------------------------
-- Uniques structure for table PERMISSIONS
-- ----------------------------
ALTER TABLE PERMISSIONS ADD CONSTRAINT UK_ROLE_PERMISSION UNIQUE (ROLE, RESOURCE, ACTION) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Checks structure for table PERMISSIONS
-- ----------------------------
ALTER TABLE PERMISSIONS ADD CONSTRAINT SYS_C0012841 CHECK (ROLE IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE PERMISSIONS ADD CONSTRAINT SYS_C0012842 CHECK (RESOURCE IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE PERMISSIONS ADD CONSTRAINT SYS_C0012843 CHECK (ACTION IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Uniques structure for table ROLES
-- ----------------------------
ALTER TABLE ROLES ADD CONSTRAINT UK_USERNAME_ROLE UNIQUE (USERNAME, ROLE) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Checks structure for table ROLES
-- ----------------------------
ALTER TABLE ROLES ADD CONSTRAINT SYS_C0012838 CHECK (USERNAME IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE ROLES ADD CONSTRAINT SYS_C0012839 CHECK (ROLE IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table TENANT_CAPACITY
-- ----------------------------
ALTER TABLE TENANT_CAPACITY ADD CONSTRAINT TC_PK_ID PRIMARY KEY (ID);

-- ----------------------------
-- Uniques structure for table TENANT_CAPACITY
-- ----------------------------
ALTER TABLE TENANT_CAPACITY ADD CONSTRAINT UK_TC_TENANT_ID UNIQUE (TENANT_ID) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Checks structure for table TENANT_CAPACITY
-- ----------------------------
ALTER TABLE TENANT_CAPACITY ADD CONSTRAINT SYS_C0012816 CHECK (ID IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE TENANT_CAPACITY ADD CONSTRAINT SYS_C0012817 CHECK (TENANT_ID IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE TENANT_CAPACITY ADD CONSTRAINT SYS_C0012818 CHECK (QUOTA IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE TENANT_CAPACITY ADD CONSTRAINT SYS_C0012819 CHECK (USAGE IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE TENANT_CAPACITY ADD CONSTRAINT SYS_C0012820 CHECK (MAX_SIZE IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE TENANT_CAPACITY ADD CONSTRAINT SYS_C0012821 CHECK (MAX_AGGR_COUNT IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE TENANT_CAPACITY ADD CONSTRAINT SYS_C0012822 CHECK (MAX_AGGR_SIZE IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE TENANT_CAPACITY ADD CONSTRAINT SYS_C0012823 CHECK (MAX_HISTORY_COUNT IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE TENANT_CAPACITY ADD CONSTRAINT SYS_C0012824 CHECK (GMT_CREATE IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE TENANT_CAPACITY ADD CONSTRAINT SYS_C0012825 CHECK (GMT_MODIFIED IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Triggers structure for table TENANT_CAPACITY
-- ----------------------------
CREATE TRIGGER TG_TENANT_CAPACITY BEFORE INSERT ON TENANT_CAPACITY REFERENCING OLD AS OLD NEW AS NEW FOR EACH ROW 
begin
    select seq_tenant_capacity.nextval into :new.id from dual;
end;
/

-- ----------------------------
-- Primary Key structure for table TENANT_INFO
-- ----------------------------
ALTER TABLE TENANT_INFO ADD CONSTRAINT TI_PK_ID PRIMARY KEY (ID);

-- ----------------------------
-- Uniques structure for table TENANT_INFO
-- ----------------------------
ALTER TABLE TENANT_INFO ADD CONSTRAINT UK_TENANT_INFO_KPTENANTID UNIQUE (KP, TENANT_ID) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Checks structure for table TENANT_INFO
-- ----------------------------
ALTER TABLE TENANT_INFO ADD CONSTRAINT SYS_C0012828 CHECK (ID IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE TENANT_INFO ADD CONSTRAINT SYS_C0012829 CHECK (KP IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE TENANT_INFO ADD CONSTRAINT SYS_C0012830 CHECK (GMT_CREATE IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE TENANT_INFO ADD CONSTRAINT SYS_C0012831 CHECK (GMT_MODIFIED IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Indexes structure for table TENANT_INFO
-- ----------------------------
CREATE INDEX IDX_TI_TENANT_ID
  ON TENANT_INFO (TENANT_ID ASC)
  LOGGING
  VISIBLE
PCTFREE 10
INITRANS 2
STORAGE (
  BUFFER_POOL DEFAULT
);

-- ----------------------------
-- Triggers structure for table TENANT_INFO
-- ----------------------------
CREATE TRIGGER TG_TENANT_INFO BEFORE INSERT ON TENANT_INFO REFERENCING OLD AS OLD NEW AS NEW FOR EACH ROW 
begin
    select seq_tenant_info.nextval into :new.id from dual;
end;
/

-- ----------------------------
-- Primary Key structure for table USERS
-- ----------------------------
ALTER TABLE USERS ADD CONSTRAINT USERS_PK_NAME PRIMARY KEY (USERNAME);

-- ----------------------------
-- Checks structure for table USERS
-- ----------------------------
ALTER TABLE USERS ADD CONSTRAINT SYS_C0012834 CHECK (USERNAME IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE USERS ADD CONSTRAINT SYS_C0012835 CHECK (PASSWORD IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE USERS ADD CONSTRAINT SYS_C0012836 CHECK (ENABLED IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
